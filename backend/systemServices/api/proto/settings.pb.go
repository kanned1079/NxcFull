// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: settings.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 自定义的 Value 消息，用于存储 JSON 数据
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*Value_StringValue
	//	*Value_IntValue
	//	*Value_BoolValue
	//	*Value_DoubleValue
	Kind isValue_Kind `protobuf_oneof:"kind"`
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_settings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{0}
}

func (m *Value) GetKind() isValue_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Value) GetStringValue() string {
	if x, ok := x.GetKind().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Value) GetIntValue() int64 {
	if x, ok := x.GetKind().(*Value_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *Value) GetBoolValue() bool {
	if x, ok := x.GetKind().(*Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *Value) GetDoubleValue() float64 {
	if x, ok := x.GetKind().(*Value_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

type isValue_Kind interface {
	isValue_Kind()
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,3,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,4,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

func (*Value_StringValue) isValue_Kind() {}

func (*Value_IntValue) isValue_Kind() {}

func (*Value_BoolValue) isValue_Kind() {}

func (*Value_DoubleValue) isValue_Kind() {}

// 更新单个设置项的请求
type UpdateSingleOptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"` // 类别
	Key      string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`           // 键
	// string value = 3;
	// Value value = 3;  // JSON 值
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateSingleOptionRequest) Reset() {
	*x = UpdateSingleOptionRequest{}
	mi := &file_settings_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSingleOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSingleOptionRequest) ProtoMessage() {}

func (x *UpdateSingleOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSingleOptionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSingleOptionRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateSingleOptionRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdateSingleOptionRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateSingleOptionRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// 更新单个设置项的响应
type UpdateSingleOptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"` // 成功消息
}

func (x *UpdateSingleOptionResponse) Reset() {
	*x = UpdateSingleOptionResponse{}
	mi := &file_settings_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSingleOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSingleOptionResponse) ProtoMessage() {}

func (x *UpdateSingleOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSingleOptionResponse.ProtoReflect.Descriptor instead.
func (*UpdateSingleOptionResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSingleOptionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateSingleOptionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 获取启动页面主题设置的请求
type GetStartThemeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStartThemeRequest) Reset() {
	*x = GetStartThemeRequest{}
	mi := &file_settings_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStartThemeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStartThemeRequest) ProtoMessage() {}

func (x *GetStartThemeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStartThemeRequest.ProtoReflect.Descriptor instead.
func (*GetStartThemeRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{3}
}

// 获取启动页面主题设置的响应
type GetStartThemeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	AppName               string `protobuf:"bytes,3,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppDescription        string `protobuf:"bytes,4,opt,name=app_description,json=appDescription,proto3" json:"app_description,omitempty"`
	TosUrl                string `protobuf:"bytes,5,opt,name=tos_url,json=tosUrl,proto3" json:"tos_url,omitempty"`
	FrontendBackgroundUrl string `protobuf:"bytes,6,opt,name=frontend_background_url,json=frontendBackgroundUrl,proto3" json:"frontend_background_url,omitempty"`
	FrontendTheme         string `protobuf:"bytes,7,opt,name=frontend_theme,json=frontendTheme,proto3" json:"frontend_theme,omitempty"`
}

func (x *GetStartThemeResponse) Reset() {
	*x = GetStartThemeResponse{}
	mi := &file_settings_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStartThemeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStartThemeResponse) ProtoMessage() {}

func (x *GetStartThemeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStartThemeResponse.ProtoReflect.Descriptor instead.
func (*GetStartThemeResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{4}
}

func (x *GetStartThemeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStartThemeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetStartThemeResponse) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *GetStartThemeResponse) GetAppDescription() string {
	if x != nil {
		return x.AppDescription
	}
	return ""
}

func (x *GetStartThemeResponse) GetTosUrl() string {
	if x != nil {
		return x.TosUrl
	}
	return ""
}

func (x *GetStartThemeResponse) GetFrontendBackgroundUrl() string {
	if x != nil {
		return x.FrontendBackgroundUrl
	}
	return ""
}

func (x *GetStartThemeResponse) GetFrontendTheme() string {
	if x != nil {
		return x.FrontendTheme
	}
	return ""
}

// 获取系统设置的请求
type GetSystemSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSystemSettingsRequest) Reset() {
	*x = GetSystemSettingsRequest{}
	mi := &file_settings_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemSettingsRequest) ProtoMessage() {}

func (x *GetSystemSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetSystemSettingsRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{5}
}

// 分类设置
type CategorySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// map<string, Value> options = 1;  // 键值对形式的设置项
	Options map[string]string `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 键值对形式的设置项
}

func (x *CategorySettings) Reset() {
	*x = CategorySettings{}
	mi := &file_settings_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategorySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategorySettings) ProtoMessage() {}

func (x *CategorySettings) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategorySettings.ProtoReflect.Descriptor instead.
func (*CategorySettings) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{6}
}

func (x *CategorySettings) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

// 获取系统设置的响应
type GetSystemSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// map<string, CategorySettings> settings = 3;  // 按照分类返回的系统设置
	// string settingsResponse = 4;
	//
	//	Settings settings = 3;
	Settings []byte `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetSystemSettingsResponse) Reset() {
	*x = GetSystemSettingsResponse{}
	mi := &file_settings_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemSettingsResponse) ProtoMessage() {}

func (x *GetSystemSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetSystemSettingsResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{7}
}

func (x *GetSystemSettingsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSystemSettingsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetSystemSettingsResponse) GetSettings() []byte {
	if x != nil {
		return x.Settings
	}
	return nil
}

// 系统设置选项（各个分类的结构体）
type Site struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName        string `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppDescription string `protobuf:"bytes,2,opt,name=app_description,json=appDescription,proto3" json:"app_description,omitempty"`
	AppUrl         string `protobuf:"bytes,3,opt,name=app_url,json=appUrl,proto3" json:"app_url,omitempty"`
	ForceHttps     bool   `protobuf:"varint,4,opt,name=force_https,json=forceHttps,proto3" json:"force_https,omitempty"`
	LogoUrl        string `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	SubscribeUrl   int32  `protobuf:"varint,6,opt,name=subscribe_url,json=subscribeUrl,proto3" json:"subscribe_url,omitempty"`
	TosUrl         string `protobuf:"bytes,7,opt,name=tos_url,json=tosUrl,proto3" json:"tos_url,omitempty"`
	StopRegister   bool   `protobuf:"varint,8,opt,name=stop_register,json=stopRegister,proto3" json:"stop_register,omitempty"`
	TrialTime      int32  `protobuf:"varint,9,opt,name=trial_time,json=trialTime,proto3" json:"trial_time,omitempty"`
	TrialSubscribe string `protobuf:"bytes,10,opt,name=trial_subscribe,json=trialSubscribe,proto3" json:"trial_subscribe,omitempty"`
	Currency       string `protobuf:"bytes,11,opt,name=currency,proto3" json:"currency,omitempty"`
	CurrencySymbol string `protobuf:"bytes,12,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol,omitempty"`
}

func (x *Site) Reset() {
	*x = Site{}
	mi := &file_settings_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Site) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Site) ProtoMessage() {}

func (x *Site) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Site.ProtoReflect.Descriptor instead.
func (*Site) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{8}
}

func (x *Site) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Site) GetAppDescription() string {
	if x != nil {
		return x.AppDescription
	}
	return ""
}

func (x *Site) GetAppUrl() string {
	if x != nil {
		return x.AppUrl
	}
	return ""
}

func (x *Site) GetForceHttps() bool {
	if x != nil {
		return x.ForceHttps
	}
	return false
}

func (x *Site) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *Site) GetSubscribeUrl() int32 {
	if x != nil {
		return x.SubscribeUrl
	}
	return 0
}

func (x *Site) GetTosUrl() string {
	if x != nil {
		return x.TosUrl
	}
	return ""
}

func (x *Site) GetStopRegister() bool {
	if x != nil {
		return x.StopRegister
	}
	return false
}

func (x *Site) GetTrialTime() int32 {
	if x != nil {
		return x.TrialTime
	}
	return 0
}

func (x *Site) GetTrialSubscribe() string {
	if x != nil {
		return x.TrialSubscribe
	}
	return ""
}

func (x *Site) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Site) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

type Security struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailVerify           bool   `protobuf:"varint,1,opt,name=email_verify,json=emailVerify,proto3" json:"email_verify,omitempty"`
	EmailGmailLimitEnable bool   `protobuf:"varint,2,opt,name=email_gmail_limit_enable,json=emailGmailLimitEnable,proto3" json:"email_gmail_limit_enable,omitempty"`
	SafeModeEnable        bool   `protobuf:"varint,3,opt,name=safe_mode_enable,json=safeModeEnable,proto3" json:"safe_mode_enable,omitempty"`
	SecurePath            string `protobuf:"bytes,4,opt,name=secure_path,json=securePath,proto3" json:"secure_path,omitempty"`
	EmailWhitelistEnable  bool   `protobuf:"varint,5,opt,name=email_whitelist_enable,json=emailWhitelistEnable,proto3" json:"email_whitelist_enable,omitempty"`
	RecaptchaEnable       bool   `protobuf:"varint,6,opt,name=recaptcha_enable,json=recaptchaEnable,proto3" json:"recaptcha_enable,omitempty"`
	IpRegisterLimitEnable bool   `protobuf:"varint,7,opt,name=ip_register_limit_enable,json=ipRegisterLimitEnable,proto3" json:"ip_register_limit_enable,omitempty"`
	IpRegisterLimitTimes  int32  `protobuf:"varint,8,opt,name=ip_register_limit_times,json=ipRegisterLimitTimes,proto3" json:"ip_register_limit_times,omitempty"`
	IpRegisterLockTime    int32  `protobuf:"varint,9,opt,name=ip_register_lock_time,json=ipRegisterLockTime,proto3" json:"ip_register_lock_time,omitempty"`
}

func (x *Security) Reset() {
	*x = Security{}
	mi := &file_settings_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Security) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Security) ProtoMessage() {}

func (x *Security) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Security.ProtoReflect.Descriptor instead.
func (*Security) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{9}
}

func (x *Security) GetEmailVerify() bool {
	if x != nil {
		return x.EmailVerify
	}
	return false
}

func (x *Security) GetEmailGmailLimitEnable() bool {
	if x != nil {
		return x.EmailGmailLimitEnable
	}
	return false
}

func (x *Security) GetSafeModeEnable() bool {
	if x != nil {
		return x.SafeModeEnable
	}
	return false
}

func (x *Security) GetSecurePath() string {
	if x != nil {
		return x.SecurePath
	}
	return ""
}

func (x *Security) GetEmailWhitelistEnable() bool {
	if x != nil {
		return x.EmailWhitelistEnable
	}
	return false
}

func (x *Security) GetRecaptchaEnable() bool {
	if x != nil {
		return x.RecaptchaEnable
	}
	return false
}

func (x *Security) GetIpRegisterLimitEnable() bool {
	if x != nil {
		return x.IpRegisterLimitEnable
	}
	return false
}

func (x *Security) GetIpRegisterLimitTimes() int32 {
	if x != nil {
		return x.IpRegisterLimitTimes
	}
	return 0
}

func (x *Security) GetIpRegisterLockTime() int32 {
	if x != nil {
		return x.IpRegisterLockTime
	}
	return 0
}

type Frontend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrontendThemeSidebar  bool   `protobuf:"varint,1,opt,name=frontend_theme_sidebar,json=frontendThemeSidebar,proto3" json:"frontend_theme_sidebar,omitempty"`
	FrontendThemeHeader   bool   `protobuf:"varint,2,opt,name=frontend_theme_header,json=frontendThemeHeader,proto3" json:"frontend_theme_header,omitempty"`
	FrontendTheme         string `protobuf:"bytes,3,opt,name=frontend_theme,json=frontendTheme,proto3" json:"frontend_theme,omitempty"`
	FrontendBackgroundUrl string `protobuf:"bytes,4,opt,name=frontend_background_url,json=frontendBackgroundUrl,proto3" json:"frontend_background_url,omitempty"`
}

func (x *Frontend) Reset() {
	*x = Frontend{}
	mi := &file_settings_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Frontend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frontend) ProtoMessage() {}

func (x *Frontend) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frontend.ProtoReflect.Descriptor instead.
func (*Frontend) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{10}
}

func (x *Frontend) GetFrontendThemeSidebar() bool {
	if x != nil {
		return x.FrontendThemeSidebar
	}
	return false
}

func (x *Frontend) GetFrontendThemeHeader() bool {
	if x != nil {
		return x.FrontendThemeHeader
	}
	return false
}

func (x *Frontend) GetFrontendTheme() string {
	if x != nil {
		return x.FrontendTheme
	}
	return ""
}

func (x *Frontend) GetFrontendBackgroundUrl() string {
	if x != nil {
		return x.FrontendBackgroundUrl
	}
	return ""
}

type Subscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserModifyEnable bool `protobuf:"varint,1,opt,name=user_modify_enable,json=userModifyEnable,proto3" json:"user_modify_enable,omitempty"`
	ShowInfoInSub    bool `protobuf:"varint,2,opt,name=show_info_in_sub,json=showInfoInSub,proto3" json:"show_info_in_sub,omitempty"`
}

func (x *Subscribe) Reset() {
	*x = Subscribe{}
	mi := &file_settings_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscribe) ProtoMessage() {}

func (x *Subscribe) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscribe.ProtoReflect.Descriptor instead.
func (*Subscribe) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{11}
}

func (x *Subscribe) GetUserModifyEnable() bool {
	if x != nil {
		return x.UserModifyEnable
	}
	return false
}

func (x *Subscribe) GetShowInfoInSub() bool {
	if x != nil {
		return x.ShowInfoInSub
	}
	return false
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerToken        string `protobuf:"bytes,1,opt,name=server_token,json=serverToken,proto3" json:"server_token,omitempty"`
	ServerPullInterval int32  `protobuf:"varint,2,opt,name=server_pull_interval,json=serverPullInterval,proto3" json:"server_pull_interval,omitempty"`
	ServerPushInterval int32  `protobuf:"varint,3,opt,name=server_push_interval,json=serverPushInterval,proto3" json:"server_push_interval,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_settings_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{12}
}

func (x *Server) GetServerToken() string {
	if x != nil {
		return x.ServerToken
	}
	return ""
}

func (x *Server) GetServerPullInterval() int32 {
	if x != nil {
		return x.ServerPullInterval
	}
	return 0
}

func (x *Server) GetServerPushInterval() int32 {
	if x != nil {
		return x.ServerPushInterval
	}
	return 0
}

type Sendmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailHost        string `protobuf:"bytes,1,opt,name=email_host,json=emailHost,proto3" json:"email_host,omitempty"`
	EmailPort        int32  `protobuf:"varint,2,opt,name=email_port,json=emailPort,proto3" json:"email_port,omitempty"`
	EmailEncryption  string `protobuf:"bytes,3,opt,name=email_encryption,json=emailEncryption,proto3" json:"email_encryption,omitempty"`
	EmailUsername    string `protobuf:"bytes,4,opt,name=email_username,json=emailUsername,proto3" json:"email_username,omitempty"`
	EmailPassword    string `protobuf:"bytes,5,opt,name=email_password,json=emailPassword,proto3" json:"email_password,omitempty"`
	EmailFromAddress string `protobuf:"bytes,6,opt,name=email_from_address,json=emailFromAddress,proto3" json:"email_from_address,omitempty"`
	EmailTemplate    string `protobuf:"bytes,7,opt,name=email_template,json=emailTemplate,proto3" json:"email_template,omitempty"`
}

func (x *Sendmail) Reset() {
	*x = Sendmail{}
	mi := &file_settings_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sendmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sendmail) ProtoMessage() {}

func (x *Sendmail) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sendmail.ProtoReflect.Descriptor instead.
func (*Sendmail) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{13}
}

func (x *Sendmail) GetEmailHost() string {
	if x != nil {
		return x.EmailHost
	}
	return ""
}

func (x *Sendmail) GetEmailPort() int32 {
	if x != nil {
		return x.EmailPort
	}
	return 0
}

func (x *Sendmail) GetEmailEncryption() string {
	if x != nil {
		return x.EmailEncryption
	}
	return ""
}

func (x *Sendmail) GetEmailUsername() string {
	if x != nil {
		return x.EmailUsername
	}
	return ""
}

func (x *Sendmail) GetEmailPassword() string {
	if x != nil {
		return x.EmailPassword
	}
	return ""
}

func (x *Sendmail) GetEmailFromAddress() string {
	if x != nil {
		return x.EmailFromAddress
	}
	return ""
}

func (x *Sendmail) GetEmailTemplate() string {
	if x != nil {
		return x.EmailTemplate
	}
	return ""
}

type Notice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeName string `protobuf:"bytes,1,opt,name=notice_name,json=noticeName,proto3" json:"notice_name,omitempty"`
	BarkHost   string `protobuf:"bytes,2,opt,name=bark_host,json=barkHost,proto3" json:"bark_host,omitempty"`
	BarkGroup  string `protobuf:"bytes,3,opt,name=bark_group,json=barkGroup,proto3" json:"bark_group,omitempty"`
}

func (x *Notice) Reset() {
	*x = Notice{}
	mi := &file_settings_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notice) ProtoMessage() {}

func (x *Notice) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notice.ProtoReflect.Descriptor instead.
func (*Notice) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{14}
}

func (x *Notice) GetNoticeName() string {
	if x != nil {
		return x.NoticeName
	}
	return ""
}

func (x *Notice) GetBarkHost() string {
	if x != nil {
		return x.BarkHost
	}
	return ""
}

func (x *Notice) GetBarkGroup() string {
	if x != nil {
		return x.BarkGroup
	}
	return ""
}

type Myapp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinDownload     string `protobuf:"bytes,1,opt,name=win_download,json=winDownload,proto3" json:"win_download,omitempty"`
	OsxDownload     string `protobuf:"bytes,2,opt,name=osx_download,json=osxDownload,proto3" json:"osx_download,omitempty"`
	AndroidDownload string `protobuf:"bytes,3,opt,name=android_download,json=androidDownload,proto3" json:"android_download,omitempty"`
}

func (x *Myapp) Reset() {
	*x = Myapp{}
	mi := &file_settings_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Myapp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Myapp) ProtoMessage() {}

func (x *Myapp) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Myapp.ProtoReflect.Descriptor instead.
func (*Myapp) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{15}
}

func (x *Myapp) GetWinDownload() string {
	if x != nil {
		return x.WinDownload
	}
	return ""
}

func (x *Myapp) GetOsxDownload() string {
	if x != nil {
		return x.OsxDownload
	}
	return ""
}

func (x *Myapp) GetAndroidDownload() string {
	if x != nil {
		return x.AndroidDownload
	}
	return ""
}

type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Site      *Site      `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
	Security  *Security  `protobuf:"bytes,2,opt,name=security,proto3" json:"security,omitempty"`
	Frontend  *Frontend  `protobuf:"bytes,3,opt,name=frontend,proto3" json:"frontend,omitempty"`
	Subscribe *Subscribe `protobuf:"bytes,4,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	Server    *Server    `protobuf:"bytes,5,opt,name=server,proto3" json:"server,omitempty"`
	Sendmail  *Sendmail  `protobuf:"bytes,6,opt,name=sendmail,proto3" json:"sendmail,omitempty"`
	Notice    *Notice    `protobuf:"bytes,7,opt,name=notice,proto3" json:"notice,omitempty"`
	Myapp     *Myapp     `protobuf:"bytes,8,opt,name=myapp,proto3" json:"myapp,omitempty"`
}

func (x *Settings) Reset() {
	*x = Settings{}
	mi := &file_settings_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{16}
}

func (x *Settings) GetSite() *Site {
	if x != nil {
		return x.Site
	}
	return nil
}

func (x *Settings) GetSecurity() *Security {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *Settings) GetFrontend() *Frontend {
	if x != nil {
		return x.Frontend
	}
	return nil
}

func (x *Settings) GetSubscribe() *Subscribe {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

func (x *Settings) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Settings) GetSendmail() *Sendmail {
	if x != nil {
		return x.Sendmail
	}
	return nil
}

func (x *Settings) GetNotice() *Notice {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *Settings) GetMyapp() *Myapp {
	if x != nil {
		return x.Myapp
	}
	return nil
}

type AddPaymentMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System string `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Config []byte `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *AddPaymentMethodRequest) Reset() {
	*x = AddPaymentMethodRequest{}
	mi := &file_settings_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPaymentMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPaymentMethodRequest) ProtoMessage() {}

func (x *AddPaymentMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPaymentMethodRequest.ProtoReflect.Descriptor instead.
func (*AddPaymentMethodRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{17}
}

func (x *AddPaymentMethodRequest) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *AddPaymentMethodRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type AddPaymentMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddPaymentMethodResponse) Reset() {
	*x = AddPaymentMethodResponse{}
	mi := &file_settings_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPaymentMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPaymentMethodResponse) ProtoMessage() {}

func (x *AddPaymentMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPaymentMethodResponse.ProtoReflect.Descriptor instead.
func (*AddPaymentMethodResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{18}
}

func (x *AddPaymentMethodResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddPaymentMethodResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetAllPaymentSettingsKvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllPaymentSettingsKvRequest) Reset() {
	*x = GetAllPaymentSettingsKvRequest{}
	mi := &file_settings_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllPaymentSettingsKvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPaymentSettingsKvRequest) ProtoMessage() {}

func (x *GetAllPaymentSettingsKvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPaymentSettingsKvRequest.ProtoReflect.Descriptor instead.
func (*GetAllPaymentSettingsKvRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{19}
}

type GetAllPaymentSettingsKvResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Config []byte `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Msg    string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *GetAllPaymentSettingsKvResponse) Reset() {
	*x = GetAllPaymentSettingsKvResponse{}
	mi := &file_settings_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllPaymentSettingsKvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPaymentSettingsKvResponse) ProtoMessage() {}

func (x *GetAllPaymentSettingsKvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPaymentSettingsKvResponse.ProtoReflect.Descriptor instead.
func (*GetAllPaymentSettingsKvResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{20}
}

func (x *GetAllPaymentSettingsKvResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllPaymentSettingsKvResponse) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetAllPaymentSettingsKvResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type EditPaymentSettingsBySystemNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System string `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Config []byte `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *EditPaymentSettingsBySystemNameRequest) Reset() {
	*x = EditPaymentSettingsBySystemNameRequest{}
	mi := &file_settings_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditPaymentSettingsBySystemNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditPaymentSettingsBySystemNameRequest) ProtoMessage() {}

func (x *EditPaymentSettingsBySystemNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditPaymentSettingsBySystemNameRequest.ProtoReflect.Descriptor instead.
func (*EditPaymentSettingsBySystemNameRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{21}
}

func (x *EditPaymentSettingsBySystemNameRequest) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *EditPaymentSettingsBySystemNameRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type EditPaymentSettingsBySystemNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *EditPaymentSettingsBySystemNameResponse) Reset() {
	*x = EditPaymentSettingsBySystemNameResponse{}
	mi := &file_settings_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditPaymentSettingsBySystemNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditPaymentSettingsBySystemNameResponse) ProtoMessage() {}

func (x *EditPaymentSettingsBySystemNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditPaymentSettingsBySystemNameResponse.ProtoReflect.Descriptor instead.
func (*EditPaymentSettingsBySystemNameResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{22}
}

func (x *EditPaymentSettingsBySystemNameResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EditPaymentSettingsBySystemNameResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type EnablePaymentSettingBySystemNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System string `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
}

func (x *EnablePaymentSettingBySystemNameRequest) Reset() {
	*x = EnablePaymentSettingBySystemNameRequest{}
	mi := &file_settings_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnablePaymentSettingBySystemNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnablePaymentSettingBySystemNameRequest) ProtoMessage() {}

func (x *EnablePaymentSettingBySystemNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnablePaymentSettingBySystemNameRequest.ProtoReflect.Descriptor instead.
func (*EnablePaymentSettingBySystemNameRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{23}
}

func (x *EnablePaymentSettingBySystemNameRequest) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

type EnablePaymentSettingBySystemNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *EnablePaymentSettingBySystemNameResponse) Reset() {
	*x = EnablePaymentSettingBySystemNameResponse{}
	mi := &file_settings_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnablePaymentSettingBySystemNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnablePaymentSettingBySystemNameResponse) ProtoMessage() {}

func (x *EnablePaymentSettingBySystemNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnablePaymentSettingBySystemNameResponse.ProtoReflect.Descriptor instead.
func (*EnablePaymentSettingBySystemNameResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{24}
}

func (x *EnablePaymentSettingBySystemNameResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EnablePaymentSettingBySystemNameResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeletePaymentSettingBySystemNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System string `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
}

func (x *DeletePaymentSettingBySystemNameRequest) Reset() {
	*x = DeletePaymentSettingBySystemNameRequest{}
	mi := &file_settings_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePaymentSettingBySystemNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePaymentSettingBySystemNameRequest) ProtoMessage() {}

func (x *DeletePaymentSettingBySystemNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePaymentSettingBySystemNameRequest.ProtoReflect.Descriptor instead.
func (*DeletePaymentSettingBySystemNameRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{25}
}

func (x *DeletePaymentSettingBySystemNameRequest) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

type DeletePaymentSettingBySystemNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeletePaymentSettingBySystemNameResponse) Reset() {
	*x = DeletePaymentSettingBySystemNameResponse{}
	mi := &file_settings_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePaymentSettingBySystemNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePaymentSettingBySystemNameResponse) ProtoMessage() {}

func (x *DeletePaymentSettingBySystemNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePaymentSettingBySystemNameResponse.ProtoReflect.Descriptor instead.
func (*DeletePaymentSettingBySystemNameResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{26}
}

func (x *DeletePaymentSettingBySystemNameResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeletePaymentSettingBySystemNameResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetPaymentMethodDetailsByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System string `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
}

func (x *GetPaymentMethodDetailsByNameRequest) Reset() {
	*x = GetPaymentMethodDetailsByNameRequest{}
	mi := &file_settings_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaymentMethodDetailsByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodDetailsByNameRequest) ProtoMessage() {}

func (x *GetPaymentMethodDetailsByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodDetailsByNameRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodDetailsByNameRequest) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{27}
}

func (x *GetPaymentMethodDetailsByNameRequest) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

type GetPaymentMethodDetailsByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Details []byte `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetPaymentMethodDetailsByNameResponse) Reset() {
	*x = GetPaymentMethodDetailsByNameResponse{}
	mi := &file_settings_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaymentMethodDetailsByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodDetailsByNameResponse) ProtoMessage() {}

func (x *GetPaymentMethodDetailsByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodDetailsByNameResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodDetailsByNameResponse) Descriptor() ([]byte, []int) {
	return file_settings_proto_rawDescGZIP(), []int{28}
}

func (x *GetPaymentMethodDetailsByNameResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPaymentMethodDetailsByNameResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPaymentMethodDetailsByNameResponse) GetDetails() []byte {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_settings_proto protoreflect.FileDescriptor

var file_settings_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09,
	0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x5f, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x16, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xf9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x73, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x73, 0x55, 0x72, 0x6c,
	0x12, 0x36, 0x0a, 0x17, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x22,
	0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x10,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x41, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x5d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x8f,
	0x03, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x70,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70,
	0x70, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x48, 0x74, 0x74, 0x70, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x73, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x69,
	0x61, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0xb5, 0x03, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x12, 0x37, 0x0a, 0x18, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x61, 0x66,
	0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x61, 0x66, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65,
	0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x35,
	0x0a, 0x17, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x69, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x08, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x62, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x54,
	0x68, 0x65, 0x6d, 0x65, 0x53, 0x69, 0x64, 0x65, 0x62, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x62,
	0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x10, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x53,
	0x75, 0x62, 0x22, 0x8f, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x22, 0x96, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x48, 0x6f, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x29, 0x0a, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x65, 0x0a,
	0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x72, 0x6b,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x72,
	0x6b, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72, 0x6b, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x72, 0x6b, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0x78, 0x0a, 0x05, 0x4d, 0x79, 0x61, 0x70, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x69, 0x6e, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x69, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x73, 0x78, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x73, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xec,
	0x02, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x73,
	0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12,
	0x2e, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x2e, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12,
	0x31, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x06,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x06,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x6d, 0x79, 0x61, 0x70, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x4d, 0x79, 0x61, 0x70, 0x70, 0x52, 0x05, 0x6d, 0x79, 0x61, 0x70, 0x70, 0x22, 0x49, 0x0a,
	0x17, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x40, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x4b, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x4b, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x58, 0x0a,
	0x26, 0x45, 0x64, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4f, 0x0a, 0x27, 0x45, 0x64, 0x69, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x41, 0x0a, 0x27, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x50, 0x0a, 0x28, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x41, 0x0a,
	0x27, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x22, 0x50, 0x0a, 0x28, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x3e, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x22, 0x67, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x32, 0x91, 0x08, 0x0a, 0x0f,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x4b, 0x76, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4b, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x4b, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86,
	0x01, 0x0a, 0x1f, 0x45, 0x64, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x30, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x20, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_settings_proto_rawDescOnce sync.Once
	file_settings_proto_rawDescData = file_settings_proto_rawDesc
)

func file_settings_proto_rawDescGZIP() []byte {
	file_settings_proto_rawDescOnce.Do(func() {
		file_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_settings_proto_rawDescData)
	})
	return file_settings_proto_rawDescData
}

var file_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_settings_proto_goTypes = []any{
	(*Value)(nil),                                    // 0: settings.Value
	(*UpdateSingleOptionRequest)(nil),                // 1: settings.UpdateSingleOptionRequest
	(*UpdateSingleOptionResponse)(nil),               // 2: settings.UpdateSingleOptionResponse
	(*GetStartThemeRequest)(nil),                     // 3: settings.GetStartThemeRequest
	(*GetStartThemeResponse)(nil),                    // 4: settings.GetStartThemeResponse
	(*GetSystemSettingsRequest)(nil),                 // 5: settings.GetSystemSettingsRequest
	(*CategorySettings)(nil),                         // 6: settings.CategorySettings
	(*GetSystemSettingsResponse)(nil),                // 7: settings.GetSystemSettingsResponse
	(*Site)(nil),                                     // 8: settings.Site
	(*Security)(nil),                                 // 9: settings.Security
	(*Frontend)(nil),                                 // 10: settings.Frontend
	(*Subscribe)(nil),                                // 11: settings.Subscribe
	(*Server)(nil),                                   // 12: settings.Server
	(*Sendmail)(nil),                                 // 13: settings.Sendmail
	(*Notice)(nil),                                   // 14: settings.Notice
	(*Myapp)(nil),                                    // 15: settings.Myapp
	(*Settings)(nil),                                 // 16: settings.Settings
	(*AddPaymentMethodRequest)(nil),                  // 17: settings.AddPaymentMethodRequest
	(*AddPaymentMethodResponse)(nil),                 // 18: settings.AddPaymentMethodResponse
	(*GetAllPaymentSettingsKvRequest)(nil),           // 19: settings.GetAllPaymentSettingsKvRequest
	(*GetAllPaymentSettingsKvResponse)(nil),          // 20: settings.GetAllPaymentSettingsKvResponse
	(*EditPaymentSettingsBySystemNameRequest)(nil),   // 21: settings.EditPaymentSettingsBySystemNameRequest
	(*EditPaymentSettingsBySystemNameResponse)(nil),  // 22: settings.EditPaymentSettingsBySystemNameResponse
	(*EnablePaymentSettingBySystemNameRequest)(nil),  // 23: settings.EnablePaymentSettingBySystemNameRequest
	(*EnablePaymentSettingBySystemNameResponse)(nil), // 24: settings.EnablePaymentSettingBySystemNameResponse
	(*DeletePaymentSettingBySystemNameRequest)(nil),  // 25: settings.DeletePaymentSettingBySystemNameRequest
	(*DeletePaymentSettingBySystemNameResponse)(nil), // 26: settings.DeletePaymentSettingBySystemNameResponse
	(*GetPaymentMethodDetailsByNameRequest)(nil),     // 27: settings.GetPaymentMethodDetailsByNameRequest
	(*GetPaymentMethodDetailsByNameResponse)(nil),    // 28: settings.GetPaymentMethodDetailsByNameResponse
	nil, // 29: settings.CategorySettings.OptionsEntry
}
var file_settings_proto_depIdxs = []int32{
	29, // 0: settings.CategorySettings.options:type_name -> settings.CategorySettings.OptionsEntry
	8,  // 1: settings.Settings.site:type_name -> settings.Site
	9,  // 2: settings.Settings.security:type_name -> settings.Security
	10, // 3: settings.Settings.frontend:type_name -> settings.Frontend
	11, // 4: settings.Settings.subscribe:type_name -> settings.Subscribe
	12, // 5: settings.Settings.server:type_name -> settings.Server
	13, // 6: settings.Settings.sendmail:type_name -> settings.Sendmail
	14, // 7: settings.Settings.notice:type_name -> settings.Notice
	15, // 8: settings.Settings.myapp:type_name -> settings.Myapp
	1,  // 9: settings.SettingsService.UpdateSingleOption:input_type -> settings.UpdateSingleOptionRequest
	3,  // 10: settings.SettingsService.GetStartTheme:input_type -> settings.GetStartThemeRequest
	5,  // 11: settings.SettingsService.GetSystemSettings:input_type -> settings.GetSystemSettingsRequest
	17, // 12: settings.SettingsService.AddPaymentMethod:input_type -> settings.AddPaymentMethodRequest
	19, // 13: settings.SettingsService.GetAllPaymentSettingsKv:input_type -> settings.GetAllPaymentSettingsKvRequest
	27, // 14: settings.SettingsService.GetPaymentMethodDetailsByName:input_type -> settings.GetPaymentMethodDetailsByNameRequest
	21, // 15: settings.SettingsService.EditPaymentSettingsBySystemName:input_type -> settings.EditPaymentSettingsBySystemNameRequest
	23, // 16: settings.SettingsService.EnablePaymentSettingBySystemName:input_type -> settings.EnablePaymentSettingBySystemNameRequest
	25, // 17: settings.SettingsService.DeletePaymentSettingBySystemName:input_type -> settings.DeletePaymentSettingBySystemNameRequest
	2,  // 18: settings.SettingsService.UpdateSingleOption:output_type -> settings.UpdateSingleOptionResponse
	4,  // 19: settings.SettingsService.GetStartTheme:output_type -> settings.GetStartThemeResponse
	7,  // 20: settings.SettingsService.GetSystemSettings:output_type -> settings.GetSystemSettingsResponse
	18, // 21: settings.SettingsService.AddPaymentMethod:output_type -> settings.AddPaymentMethodResponse
	20, // 22: settings.SettingsService.GetAllPaymentSettingsKv:output_type -> settings.GetAllPaymentSettingsKvResponse
	28, // 23: settings.SettingsService.GetPaymentMethodDetailsByName:output_type -> settings.GetPaymentMethodDetailsByNameResponse
	22, // 24: settings.SettingsService.EditPaymentSettingsBySystemName:output_type -> settings.EditPaymentSettingsBySystemNameResponse
	24, // 25: settings.SettingsService.EnablePaymentSettingBySystemName:output_type -> settings.EnablePaymentSettingBySystemNameResponse
	26, // 26: settings.SettingsService.DeletePaymentSettingBySystemName:output_type -> settings.DeletePaymentSettingBySystemNameResponse
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_settings_proto_init() }
func file_settings_proto_init() {
	if File_settings_proto != nil {
		return
	}
	file_settings_proto_msgTypes[0].OneofWrappers = []any{
		(*Value_StringValue)(nil),
		(*Value_IntValue)(nil),
		(*Value_BoolValue)(nil),
		(*Value_DoubleValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_settings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_settings_proto_goTypes,
		DependencyIndexes: file_settings_proto_depIdxs,
		MessageInfos:      file_settings_proto_msgTypes,
	}.Build()
	File_settings_proto = out.File
	file_settings_proto_rawDesc = nil
	file_settings_proto_goTypes = nil
	file_settings_proto_depIdxs = nil
}
