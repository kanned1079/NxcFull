syntax = "proto3";

package settings;

option go_package = "./proto";

//import "google/protobuf/struct.proto"; // 使用 struct.proto 来处理动态 JSON 值

// 自定义的 Value 消息，用于存储 JSON 数据
message Value {
  oneof kind {
    string string_value = 1;
    int64 int_value = 2;
    bool bool_value = 3;
    double double_value = 4;
  }
}

// 定义 SettingsService 服务
service SettingsService {
  // 更新单个设置项
  rpc UpdateSingleOption(UpdateSingleOptionRequest) returns (UpdateSingleOptionResponse);

  // 获取启动页面主题设置
  rpc GetStartTheme(GetStartThemeRequest) returns (GetStartThemeResponse);

  // 获取所有的设置
  rpc GetSystemSettings(GetSystemSettingsRequest) returns (GetSystemSettingsResponse);

  // 支付配置

  // pass 添加新的付款方式
  rpc AddPaymentMethod(AddPaymentMethodRequest) returns (AddPaymentMethodResponse);

  // 获取所有支付方式的键值对 名称 是否被启用
  rpc GetAllPaymentSettingsKv(GetAllPaymentSettingsKvRequest) returns (GetAllPaymentSettingsKvResponse);

  // 根据传入的支付方式名称来获取其详细信息
  rpc GetPaymentMethodDetailsByName(GetPaymentMethodDetailsByNameRequest) returns (GetPaymentMethodDetailsByNameResponse);

  // 根据名称来新增或修改支付方式的信息
  rpc EditPaymentSettingsBySystemName(EditPaymentSettingsBySystemNameRequest) returns (EditPaymentSettingsBySystemNameResponse);

  // 是否启用该支付防止 这个调用后取反enabled字段 之后需要刷新Redis缓存和页面
  rpc EnablePaymentSettingBySystemName(EnablePaymentSettingBySystemNameRequest) returns (EnablePaymentSettingBySystemNameResponse);

  // pass 删除付款方式
  rpc DeletePaymentSettingBySystemName(DeletePaymentSettingBySystemNameRequest) returns (DeletePaymentSettingBySystemNameResponse);

  // 杂项
  rpc GetInviteUserMsg(GetInviteUserMsgRequest) returns (GetInviteUserMsgResponse);

  // 管理员首页的图表
  rpc GetAdminDashboardData(GetAdminDashboardDataRequest) returns (GetAdminDashboardDataResponse);

  // 获取整个页面的配置信息
  rpc GetBasicRuntimeEnvConfig(GetBasicRuntimeEnvConfigRequest) returns (GetBasicRuntimeEnvConfigResponse);

  rpc GetRegisterEnvConfig(GetRegisterEnvConfigRequest) returns (GetRegisterEnvConfigResponse);

  rpc GetWelcomePageConfig(GetWelcomePageConfigRequest) returns (GetWelcomePageConfigResponse);
}

// 更新单个设置项的请求
message UpdateSingleOptionRequest {
  string category = 1;  // 类别
  string key = 2;       // 键
  //  string value = 3;
//  Value value = 3;  // JSON 值
  bytes value = 3;
}

// 更新单个设置项的响应
message UpdateSingleOptionResponse {
  int32 code = 1;
  string msg = 2;  // 成功消息
}

// 获取启动页面主题设置的请求
message GetStartThemeRequest {}

// 获取启动页面主题设置的响应
message GetStartThemeResponse {
  int32 code = 1;
  string msg = 2;
  string app_name = 3;
  string app_description = 4;
  string tos_url = 5;
  string frontend_background_url = 6;
  string frontend_theme = 7;
}

// 获取系统设置的请求
message GetSystemSettingsRequest {}


// 分类设置
message CategorySettings {
  //  map<string, Value> options = 1;  // 键值对形式的设置项
  map<string, string> options = 1;  // 键值对形式的设置项
}

// 获取系统设置的响应
message GetSystemSettingsResponse {
  int32 code = 1;
  string msg = 2;
//  map<string, CategorySettings> settings = 3;  // 按照分类返回的系统设置
//  string settingsResponse = 4;
//    Settings settings = 3;
  bytes settings = 3;
}


// 系统设置选项（各个分类的结构体）
message Site {
  string app_name = 1;
  string app_description = 2;
  string app_url = 3;
  bool force_https = 4;
  string logo_url = 5;
  int32 subscribe_url = 6;
  string tos_url = 7;
  bool stop_register = 8;
  int32 trial_time = 9;
  string trial_subscribe = 10;
  string currency = 11;
  string currency_symbol = 12;
}

message Security {
  bool email_verify = 1;
  bool email_gmail_limit_enable = 2;
  bool safe_mode_enable = 3;
  string secure_path = 4;
  bool email_whitelist_enable = 5;
  bool recaptcha_enable = 6;
  bool ip_register_limit_enable = 7;
  int32 ip_register_limit_times = 8;
  int32 ip_register_lock_time = 9;
}

message Frontend {
  bool frontend_theme_sidebar = 1;
  bool frontend_theme_header = 2;
  string frontend_theme = 3;
  string frontend_background_url = 4;
}

message Subscribe {
  bool user_modify_enable = 1;
  bool show_info_in_sub = 2;
}

message Server {
  string server_token = 1;
  int32 server_pull_interval = 2;
  int32 server_push_interval = 3;
}

message Sendmail {
  string email_host = 1;
  int32 email_port = 2;
  string email_encryption = 3;
  string email_username = 4;
  string email_password = 5;
  string email_from_address = 6;
  string email_template = 7;
}

message Notice {
  string notice_name = 1;
  string bark_host = 2;
  string bark_group = 3;
}

message Myapp {
  string win_download = 1;
  string osx_download = 2;
  string android_download = 3;
}

message Settings {
  Site site = 1;
  Security security = 2;
  Frontend frontend = 3;
  Subscribe subscribe = 4;
  Server server = 5;
  Sendmail sendmail = 6;
  Notice notice = 7;
  Myapp myapp = 8;
}

message AddPaymentMethodRequest {
  string system = 1;
  bytes config = 2;
}

message AddPaymentMethodResponse {
  int32 code = 1;
  string msg = 2;
}

message GetAllPaymentSettingsKvRequest {
  
}

message GetAllPaymentSettingsKvResponse {
  int32 code = 1;
  bytes config = 2;
  string discount_msg = 3;
  string msg = 4;
}

message EditPaymentSettingsBySystemNameRequest {
  string system = 1;
  bytes config = 2;
}

message EditPaymentSettingsBySystemNameResponse {
  int32 code = 1;
  string msg = 2;
}

message EnablePaymentSettingBySystemNameRequest {
  string system = 1;
}

message EnablePaymentSettingBySystemNameResponse {
  int32 code = 1;
  string msg = 2;
}

message DeletePaymentSettingBySystemNameRequest {
  string system = 1;
}

message DeletePaymentSettingBySystemNameResponse {
  int32 code = 1;
  string msg = 2;
}

message GetPaymentMethodDetailsByNameRequest {
  string system = 1;
}

message GetPaymentMethodDetailsByNameResponse {
  int32 code = 1;
  string msg = 2;
  bytes details = 3;
}

//

message GetInviteUserMsgRequest {

}

message GetInviteUserMsgResponse {
  int32 code = 1;
  string invite_msg = 2;
  string msg = 3;
}

//

message GetAdminDashboardDataRequest {

}

message GetAdminDashboardDataResponse {
  int32 code = 1;
  string msg = 2;
  float income_yesterday = 3; // 昨日收入
  float income_this_month = 4;  // 当月收入
  repeated int64 api_access_count_history = 5;
  repeated float income_count_history = 6;
  int64 active_users_count = 7;
  int64 inactive_users_count = 8;
  int64 all_registered_users_count = 9;
  int64 new_users_yesterday = 10;
}

//

message GetBasicRuntimeEnvConfigRequest {
  string lang = 1;
}

message GetBasicRuntimeEnvConfigResponse {
  int32 code = 1;
  string msg = 2;
  bytes config = 3;
//  string app_name = 3;
//  string app_sub_name = 4;
//  string app_description = 5;
//  string app_url = 6;
//  string logo = 7;
//  string user_bg = 8;
//  string frontend_background_url = 9;
//  string frontend_theme = 10;
//  string currency = 11;
//  string currency_symbol = 12;
//  bool stop_register = 13;  // false允许注册 true关闭注册
}

//

message GetRegisterEnvConfigRequest {
  string lang = 1;
}

message GetRegisterEnvConfigResponse {
  int32 code = 1;
  string msg = 2;
  bytes config = 3;
//  string app_name = 3;
//  string app_sub_name = 4;
//  string app_description = 5;
//  string app_url = 6;
//  bool email_whitelist_suffix = 7;
//  bool is_email_verify = 8;
//  bool email_gmail_limit_enable = 9;
//  bool is_invite_force = 10;
//  bool is_recaptcha = 11;
//  string logo = 12;
//  string recaptcha_site_key = 13;
//  string tos_url = 14;
//  bool stop_register = 15;
}

message GetWelcomePageConfigRequest {
  string lang = 1;
}

message GetWelcomePageConfigResponse {
  int32 code = 1;
  string msg = 2;
  bytes config = 3;
}