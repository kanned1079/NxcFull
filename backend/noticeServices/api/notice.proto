syntax = "proto3";

package publicNotice;

option go_package = "./proto";

// 公共通知消息结构
message PublicNotice {
  int64 id = 1;
  string title = 2;
  string content = 3;
  bool show = 4;
  string img_url = 5;
  string tags = 6;
  string created_at = 7;
  string updated_at = 8;
  string deleted_at = 9;
}

// 获取所有通知的请求与响应
message GetAllNoticesRequest {
  int64 size = 1;
  int64 page = 2;
  bool is_user = 3;
}

message GetAllNoticesResponse {
  int32 code = 1;
  //  repeated PublicNotice notices = 2;
  bytes notices = 3;
  string msg = 4;
  int64 page_count = 5;
}

// 添加通知的请求与响应
message AddNoticeRequest {
  string title = 1;
  string content = 2;
  bool show = 3;
  string img_url = 4;
  string tags = 5;
}

message AddNoticeResponse {
  int32 code = 1;
  string msg = 2;
}

// 删除通知的请求与响应
message DeleteNoticeRequest {
  int64 notice_id = 1;
}

message DeleteNoticeResponse {
  int32 code = 1;
  string msg = 2;
}

// -------------

message UpdateNoticeStatusRequest {
  int64 id = 1;
  bool is_show = 2;
}

message UpdateNoticeStatusResponse {
  int32 code = 1;
  string msg = 2;
}

// --------

message UpdateNoticeRequest {
  int64 id = 1;
  string title = 2;
  string content = 3;
  bool show = 4;
  string img_url = 5;
  string tags = 6;
}

message UpdateNoticeResponse {
  int32 code = 1;
  string msg = 2;
}


// 定义服务接口
service NoticeService {
  rpc GetAllNotices (GetAllNoticesRequest) returns (GetAllNoticesResponse);
  rpc AddNotice (AddNoticeRequest) returns (AddNoticeResponse);
  rpc DeleteNotice (DeleteNoticeRequest) returns (DeleteNoticeResponse);
  rpc UpdateNotice (UpdateNoticeRequest) returns (UpdateNoticeResponse);
  rpc UpdateNoticeStatus (UpdateNoticeStatusRequest) returns (UpdateNoticeStatusResponse);
}