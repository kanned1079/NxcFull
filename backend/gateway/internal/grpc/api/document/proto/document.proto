syntax = "proto3";

package document;

option go_package = "./proto";

// 定义 Document 服务
service DocumentService {
  // GetDocuments GET请求 对提供的语言选择来获取文档列表 按照类别分类 用户的请求
  rpc GetDocuments (GetDocumentsRequest) returns (GetDocumentsResponse);

  rpc GetDocumentsAdmin (GetDocumentsAdminRequest) returns (GetDocumentsAdminResponse);
  // AddDocument 添加新的文档 管理员的请求
  rpc AddDocument (AddDocumentRequest) returns (AddDocumentResponse);
  // UpdateDocument 对提供id的文档进行修改
  rpc UpdateDocument (UpdateDocumentRequest) returns (UpdateDocumentResponse);
  // UpdateDocumentShow PATCH请求来修改文档是否被展示给用户
  rpc UpdateDocumentShow (UpdateDocumentShowRequest) returns (UpdateDocumentShowResponse);
  // DeleteDocument 对提供id的文档进行软删除
  rpc DeleteDocument (DeleteDocumentRequest) returns (DeleteDocumentResponse);
}


// 定义键值对结构，模拟 map[string]string
//message KeyValuePair {
//  string key = 1;
//  string value = 2;
//}

// 定义用于模拟 map 的结构
//message mapEntry {
//  string category = 1;
//  repeated KeyValuePair data = 2; // category 对应多个键值对
//}

// 每个类别包含对应的文档列表
message CategoryDocuments {
  string category = 1; // 类别名
//  repeated Document documents = 2; // 对应的文档列表
  bytes documents = 2;
}


// 定义文档结构
//message Document {
//  int64 id = 1;
//  string language = 2;
//  string category = 3;
//  string title = 4;
//  string body = 5;
//  int64 sort = 6;
//  bool show = 7;
//  string created_at = 8;
//  string updated_at = 9;
//  string deleted_at = 10;
//}

// 请求文档列表的请求结构
message GetDocumentsRequest {
  string language = 1;
  string find = 2;
}

// 请求文档列表的响应结构
message GetDocumentsResponse {
  int64 code = 1;
  string msg = 2;
//  repeated Document documents = 3;
//  repeated mapEntry documents = 3; // 使用 mapEntry 来模拟 map[string]interface{}
//  repeated CategoryDocuments documents = 3; // 修改为 CategoryDocuments 类型
  bytes documents = 3;
}

// 添加新文档的请求结构
message AddDocumentRequest {
  string language = 1; //
  string category = 2; //
  string title = 3; //
  string body = 4; //
  int64 sort = 5; //
//  bool show = 6;  // 修改为默认false 后续通过patch更新
}

// 添加新文档的响应结构
message AddDocumentResponse {
  int64 code = 1;
  string msg = 2;
  bool success = 3;
  string message = 4;
}

// 更新文档的请求结构
message UpdateDocumentRequest {
  int64 id = 1;
  string language = 2; //
  string category = 3; //
  string title = 4; //
  string body = 5; //
  int64 sort = 6; //
}

// 更新文档的响应结构
message UpdateDocumentResponse {
  int64 code = 1;
  string msg = 2;
  bool success = 3;
  string message = 4;
}

message UpdateDocumentShowRequest {
  int64 id = 1;
  bool show = 2;
}

message UpdateDocumentShowResponse {
  int32 code = 1;
  bool success = 2;
  string msg = 3;
}

message GetDocumentsAdminRequest {
  int64 page = 1;
  int64 size = 2;
}

message GetDocumentsAdminResponse {
  int32 code = 1;
  bytes documents = 2;
  int64 page_count = 3;
  string msg = 4;
}

message DeleteDocumentRequest {
  int64 id = 1;
}

message DeleteDocumentResponse {
  int32 code = 1;
  bool deleted = 2;
  string msg = 3;
}