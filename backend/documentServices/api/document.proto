syntax = "proto3";

package document;

option go_package = "./proto";

// 定义键值对结构，模拟 map[string]string
message KeyValuePair {
  string key = 1;
  string value = 2;
}

// 定义用于模拟 map 的结构
message mapEntry {
  string category = 1;
  repeated KeyValuePair data = 2; // category 对应多个键值对
}

// 定义文档结构
message Document {
  int64 id = 1;
  string language = 2;
  string category = 3;
  string title = 4;
  string body = 5;
  int32 sort = 6;
  bool show = 7;
  string created_at = 8;
  string updated_at = 9;
  string deleted_at = 10;
}

// 请求文档列表的请求结构
message GetDocumentsRequest {
  string language = 1;
}

// 请求文档列表的响应结构
message GetDocumentsResponse {
  int64 code = 1;
  string msg = 2;
//  repeated Document documents = 3;
  repeated mapEntry documents = 3; // 使用 mapEntry 来模拟 map[string]interface{}
}

// 添加新文档的请求结构
message AddDocumentRequest {
  string language = 1;
  string category = 2;
  string title = 3;
  string body = 4;
  int32 sort = 5;
  bool show = 6;
}

// 添加新文档的响应结构
message AddDocumentResponse {
  int64 code = 1;
  string msg = 2;
  bool success = 3;
  string message = 4;
}

// 更新文档的请求结构
message UpdateDocumentRequest {
  int64 id = 1;
  string language = 2;
  string category = 3;
  string title = 4;
  string body = 5;
}

// 更新文档的响应结构
message UpdateDocumentResponse {
  int64 code = 1;
  string msg = 2;
  bool success = 3;
  string message = 4;
}

// 定义 Document 服务
service DocumentService {
  rpc GetDocuments (GetDocumentsRequest) returns (GetDocumentsResponse);
  rpc AddDocument (AddDocumentRequest) returns (AddDocumentResponse);
  rpc UpdateDocument (UpdateDocumentRequest) returns (UpdateDocumentResponse);
}
