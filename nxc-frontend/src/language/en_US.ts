export default {
    commonHeader: {
        menuTxt: 'Menu',
        userData: 'User Data',
        editUserData: 'Edit User Data',
        logout: 'Logout',
    },
    commonAside: {
        admin: {},
        user: {
            dashboard: 'Dashboard',
            document: 'User Guide',
            subscription: 'Subscription',
            purchase: 'Purchase Subscription',
            surplus: 'My Keys',
            fiance: 'Finance',
            topUp: 'Recharge',
            myOrder: 'My Orders',
            myInvite: 'My Invites',
            user: 'User',
            profile: 'Profile',
            support: 'My Tickets',
            activateLog: 'Activation Log'
        }
    },
    adminViews: {
        summary: {
            systemConfig: 'System Settings',
            paymentConfig: 'Payment Settings',
            planMgr: 'Subscription Management',
            userMgr: 'User Management',
            orderMgr: 'Order Management',
            keyMgr: 'Key Management',
            incomeText: 'Yesterday\'s Income / Current Month\'s Income',
        },
        docMgr: {
            docId: '#',
            isShow: 'Whether to Display',
            sortAs: 'Sort',
            lang: 'Language',
            category: 'Category',
            title: 'Title',
            createdAt: 'Creation Time',
            updatedAt: 'Update Time',
            operate: 'Operation',
            edit: 'Edit',
            delete: 'Delete',

        },
        userMgr: {
            userManager: "User Management",
            enterEmail: "Please enter the email address",
            enterValidEmail: "Please enter a valid email format",
            enterPassword: "Please enter the password",
            passwordMinLength: "The password length must be at least 6 characters",
            passwordMaxLength: "The password length cannot exceed 20 characters",
            passwordStrength: "The password must contain letters, numbers and special characters",
            validationSuccess: "Validation passed",
            validationFailed: "Form validation failed. Please check the input items",
            editProfile: "Edit Profile",
            banUser: "Ban User",
            unbanUser: "Unban User",
            noRecord: "No Record",
            normal: "Normal",
            banned: "Banned",
            deleted: 'Deleted',
            nullContent: "NULL",
            balance: "Balance",
            orderCount: "Order Quantity",
            planCount: "Plan Quantity",
            actions: "Actions",
            updateSuccess: "Update successful",
            addUserSuccess: "Successfully added a new user",
            unknownError: "Unknown error",
            dataCountOptions10: "10 items of data per page",
            dataCountOptions20: "20 items of data per page",
            dataCountOptions50: "50 items of data per page",
            dataCountOptions100: "100 items of data per page",
            email: "Email",
            registerDate: "Registration Date",
            isAdmin: "Administrator",
            isStaff: "Staff",
            accountStatus: "Account Status",
            inviteCode: "Invitation Code",
            query: "Query",
            reset: "Reset",
            addNewUser: "Add New User",
            searchUser: "Search for Users",
            cancel: "Cancel",
            submit: "Submit",
            userEmail: "User's Email",
            inputUserEmail: "Enter the user's email (fuzzy search)",
            inputEmail: "Enter the email",
            password: "Password",
            inputPassword: "Enter the password",
            // inviteCode: "Invitation Code",
            // isAdmin: "Administrator",
            // isStaff: "Staff",
            // balance: "Balance",
            // email: "Email",
            editUser: "Edit User",
            no: "No",
            yes: "Yes"
        }
    },
    userLogin: {
        loginToContinue: 'Login to continue',
        email: 'Email Address',
        password: 'Password',
        haveNoAccount: 'Don\'t have an account yet?',
        login: 'Login',
        reg: 'Register Now',
        otherMethods: 'Or continue using other methods',
        github: 'Continue with Github account',
        apple: 'Continue with Apple account',
        google: 'Continue with Google account',
        backHomePage: 'Back to Home Page',
    },
    userRegister: {
        backHomePage: 'Back to Home Page',
        newAccount: 'Prepare your new account',
        email: 'Email Address',
        verifyCode: 'Email Verification Code',
        invalidEmailFormat: 'Invalid email format',
        sendVerifyCode: 'Send email verification code',
        sendSuccess: 'Email sent successfully. Please check your inbox.',
        pwd: 'Password',
        pwdAgain: 'Confirm Password',
        inviteCode: 'Invitation Code (optional)',
        agreement: 'I have read and agreed',
        terminalUserAgreement: 'User Agreement',
        reg: 'Register',
        // regSuccess: 'Registration successful',
        infoIncomplete: 'Incomplete information',
        pwdIncorrect: 'Passwords do not match',
        regSuccess: 'Registration successful, return to login',
        regFailure: 'Registration failed',
        success: 'Success',
        failure: 'Failure',
        unknowErr: 'Unknown error',
        verifyCodeErr: 'Verification code error',

    },
    userSummary: {
        myPlan: 'My Subscription',
        shortcut: 'Shortcut',
        timeLeft: 'The subscription is valid and will expire in {msg}.',
        toPurchase: 'Purchase Subscription',
        tutorial: {
            title: 'View Tutorial',
            content: 'Learn how to use {name}',
        },
        checkKey: {
            title: 'View Keys',
            content: 'Quickly import the keys into the corresponding client for use',
        },
        renewPlan: {
            title: 'Renew Subscription',
            content: 'Renew your current subscription',
        },
        support: {
            title: 'Having Problems',
            content: 'If you have problems, you can communicate with us through tickets',
        },
        haveTicket: 'You have {count} pending tickets',
        toCheckTicket: 'Go to check',
        showAllKeys: 'View All Keys',
    },
    userDocument: {
        searchPlaceholder: 'Please enter the content to search (fuzzy search)',
        searchBtn: 'Search',
    },
    newPurchase: {
        headerPlaceholder: 'Choose the plan that suits you best',
        purchaseBtn: 'Order',
        monthPay: 'Monthly Payment',
        moreMethod: 'More Options',
    },
    newSettlement: {
        err: 'Error',
        monthPay: 'Monthly Payment',
        quarterPay: 'Quarterly Payment',
        halfYearPay: 'Semi-Annual Payment',
        yearPay: 'Annual Payment',
        payCycle: 'Payment Cycle',
        couponPlaceholder: 'Have a coupon?',
        verifyBtn: 'Verify',
        orderTotalTitle: 'Total Order Amount',
        total: 'Total',
        submitOrder: 'Submit Order',
        coupon: 'Coupon',
        notify: {
            passTitle: 'Verification Passed',
            couponVerified: 'Coupon is valid',
            couponInvalid: "Coupon is invalid",
            couponIsNull: 'The entered coupon code cannot be empty',
        }
    },
    // pass
    userProfile: {
        myWallet: 'My Wallet',
        walletSub: 'Account Balance (Only for Consumption)',
        alertPwd: 'Change Password',
        oldPwd: 'Old Password',
        oldPwdSub: 'Please enter the old password',
        newPwd: 'New Password',
        newPwdSub: 'Please enter the new password',
        newPwdAgain: 'Confirm Password',
        newPwdAgainSub: 'Please enter the new password again',
        saveBtn: 'Save',
        notify: 'Notification',
        enableNotify: 'Enable Expiration Notification',
        deleteAccount: 'Delete Account',
        deleteAccountSub: 'Your account will be marked as deleted. If you need to use our services again, please register again',
        deleteBtn: 'Delete My Account',
        oldPwdVerifiedFailure: 'Old password verification failed',
        alertFailure: 'Password change failed',
        alertSuccess: 'Change successful',
        alertSuccessSub: 'Please log in with the new password',
        errorPwdFormat: 'Incorrect password format',
        pwdNotMatch: 'The two entered passwords do not match',
        oldPwdNotNull: 'The old password cannot be empty',
        toTopUp: 'Go to recharge',
        deleteMyTitle: 'Warning',
        deleteMyContent: 'Are you sure to delete your account? If you need to use the service, please register again.',
        deleteMyPositiveText: 'Confirm Delete',
        deleteMyNegativeText: 'Cancel',
        deletedSuccessMsg: 'Account has been deleted. Hope to see you again.',
        deleteErrOccur: 'An error occurred',
        faAuth: 'Two-Factor Authentication (2FA)',
        faAuthHint: 'Two-factor authentication is a security mechanism that adds a layer of protection to logging into your account. After entering the password, users need to complete a second step of authentication, such as entering the verification code sent to the mobile phone, using the dynamic code generated by the authentication application, or confirming through biometrics like fingerprints.',
        faAuthStatus: 'Two-Factor Authentication Status',
        faEnabled: 'Enabled',
        faNotEnabled: 'Not Enabled',
        setup2Fa: 'Set up Two-Factor Authentication',
        disable2Fa: 'Disable Two-Factor Authentication',
        setup2FaModal: {
            followStep: 'Follow the prompts to add it to your authenticator',
            step1Title: 'Follow the steps below to enable 2FA authentication',
            step1Context1: '1. You need to have a common authenticator on your mobile device',
            step1Context2: '2. Click the Scan button on the authenticator to scan the QR code here',
            step1Context3: '3. This QR Code contains your authentication information and a unique key. Please keep it safe',
            step2Context1: 'In order to ensure that your authenticator can work properly, we need to conduct a test.',
            test2Fa: 'Test',
            cancel: 'Cancel',
        }
    },
    // tickets: {
    //     userTickets: 'Historical Tickets',
    //     addTicket: 'Create New Ticket',
    // },
    userKeys: {
        myKeys: 'My Keys',
        noKeys: 'You don\'t have a valid purchase record yet',
        keyDetail: 'Key Details',
        keyId: 'Key ID',
        orderId: 'Linked Order ID',
        clientId: 'Activated Client ID',
        active: 'Active',
        inActive: 'Inactive',
        valid: 'Valid Key',
        invalid: 'Invalid Key',
        isUsed: 'Activated and in use',
        noUsed: 'Not in use yet',
        releaseData: 'Key Generation Date',
        expirationData: 'Expiration Date',
        none: 'None',
        authorizationFor: 'Authorized for',
        hoverClickMention: 'Click to copy to clipboard',
        copiedSuccessMessage: 'Key copied successfully. Please refer to the documentation for further operations.',
        copyFailure: 'Copy failed',
        hoverCopiedSuccessMention: 'Copied successfully'
    },
    userOrders: {
        myOrders: 'My Orders',
        orderId: '#',
        planName: 'Subscription Name',
        planCycle: 'Subscription Cycle',
        orderPrice: 'Order Amount',
        orderStatus: 'Order Status',
        createdAt: 'Creation Time',
        operate: 'Operation',
        showDetail: 'Show Order Details',
        cancelOrder: 'Cancel Order',
        canceled: 'Canceled',
        period: {
            monthPay: 'Monthly Payment',
            quarterPay: 'Quarterly Payment',
            halfYearPay: 'Semi-Annual Payment',
            yearPay: 'Annual Payment',
        },
        orderStatusTags: {
            success: 'Success',
            cancelled: 'Failed',
            notPay: 'Unpaid'
        },
        orderCancelled: 'Order has been canceled',
        unknownErr: 'Unknown error',

    },

    userTopUp: {
        topUp: 'Recharge',
        chooseTopUpAmount: 'Choose the recharge amount',
        quickSelect: 'Quick Select',
        customAmount: 'Custom Amount',
        maxAmount: 'Maximum Amount: 10,000,000',
        amountInputPlaceHolder: 'Enter the amount to recharge',
        otherAmount: 'Other Amount',
        payMethod: 'Payment Method',
        wechat: 'WeChat Pay',
        alipay: 'Alipay',
        apple: 'Apple Pay',
        yourAmount: 'Your Amount',
        discount: 'Discount',
        accountBalance: 'Account Balance',
        balanceResult: 'Balance Total',
        commitTopUp: 'Submit',
        payMethodNotAllow: 'The payment method is not available. Please choose another one',
        topUpIssueOccur: 'Having trouble with recharge?',
        payIssueOccur: 'Having trouble with payment?',
        chatWithUs: 'Contact Customer Service',
        pay: 'Pay',
        qrCodeScannedSuccess: 'QR code scanned successfully',
        orClickToApp: 'Or click to go to the app to continue',
        topUpSuccess: 'Recharge successful',
        thankU: 'Thank you for your support'


    },
    userConfirmOrder: {
        switchPlan: 'Switch Subscription',
        cancelOrder: 'Cancel Order',
        yourPrice: 'Your Price',
        couponOffset: 'Coupon Offset',
        price: 'Price',
        submit: 'Submit',
        monthPay: 'Monthly Payment',
        quarterPay: 'Quarterly Payment',
        halfYearPay: 'Semi-Annual Payment',
        yearPay: 'Annual Payment',
        goodInfo: 'Product Information',
        cycleOrType: 'Cycle/Type',
        orderNumber: 'Order Number',
        createdAt: 'Creation Date',
        orderExpired: 'Order has expired',
        paySuccessfully: 'Payment successful. Thank you for your support.',
        balanceNotEnough: 'Your balance is insufficient. Please recharge first. The order will be reserved for five minutes.',
        orderErrorOccur: 'An error occurred with the order',
        orderCancelled: 'Order has been canceled',
    },
    paymentResultParts: {
        goodInfoView: {
            goodInfo: 'Product Information',
        },
        orderInfoView: {
            orderInfo: 'Order Information',
        },
    },
    orderPartUniversal: {
        period: {
            monthPay: 'Monthly Payment',
            quarterPay: 'Quarterly Payment',
            halfYearPay: 'Semi-Annual Payment',
            yearPay: 'Annual Payment',
        },
        orderDataHex: {
            goodInfo: 'Product Information',
            orderInfo: 'Order Information',
            cycleOrType: 'Cycle/Type',
            orderNumber: 'Order Number',
            createdAt: 'Creation Date',
            amount: 'Payment Amount',
            paidAt: 'Payment Time',
        }
    },
    orderDetail: {
        // goodInfo: 'Product Information',
        // cycleOrType: 'Cycle/Type',
        // monthPay: 'Monthly Payment',
        // quarterPay: 'Quarterly Payment',
        // halfYearPay: 'Semi-Annual Payment',
        // yearPay: 'Annual Payment',
        // orderNumber: 'Order Number',
        // createdAt: 'Creation Date',
        // amount: 'Payment Amount',
        // paidAt: 'Payment Time',

        finished: 'Completed',
        finishedAndSuccessDescription: 'The order has been successfully paid and activated',
        useManual: 'View User Manual',

        payPending: 'Not Paid Yet',
        pendingDescription: 'The order is temporarily reserved. You can click the button below to continue payment.',
        toPay: 'Go to Pay',

        outDate: 'Expired',
        outDateDescription: 'Since you canceled the order or did not complete the payment within the specified time, the order has been canceled. You can choose a new subscription plan.',
        chooseNewPlan: 'Choose a new subscription plan',

    },
    userInvite: {
        myInvite: 'My Invites',
        unit: 'Number of People',
        inviteCodeMgr: 'Your Invitation Code',
        generateInviteCode: 'Generate Random Invitation Code',
        faCodeManage: 'Invitation Code Management',
        email: 'Email',
        createdAt: 'Registration Time',
        createFaCodeFailure: 'Creation failed',
        linkCopiedSuccess: 'Link copied successfully',
        generateFaCode: 'Generate Invitation Code',
        flushFaCode: 'Refresh Invitation Code',
        faCode: 'Invitation Code',
        noFaCode: 'You don\'t have an invitation code yet. Please generate one first.',
        faLink: 'Invitation Link',
        generateFaCodePlease: 'Please generate an invitation code first',
        usersMyInvited: 'Users I Invited',
        generateCodeConfirm: 'Confirm Generation/Refresh',
        generateCodeHint: 'Please note that the invitation code cannot be closed after creation.',
        positiveClick: 'Confirm',
        negativeClick: 'Cancel',
    },
    userTickets: {
        ticketId: '#',
        ticketSubject: 'Ticket Subject',
        ticketUrgency: 'Ticket Urgency',
        ticketContent: 'Ticket Content',
        ticketUrgencyLevel: {
            low: 'Low',
            med: 'Medium',
            high: 'High',
        },
        ticketStatus: 'Ticket Status',
        ticketCreatedAt: 'Creation Time',
        lastResponse: 'Last Response',
        operate: 'Operation',
        checkTicket: 'View Ticket',
        closeTicket: 'Close Ticket',
        userTickets: 'Historical Tickets',
        addTicket: 'Create New Ticket',
        ticketActive: 'Active',
        ticketInActive: 'Inactive',
        form: {
            ticketSubjectDescription: 'Please enter the ticket subject',
            ticketUrgencyDescription: 'Please select the ticket urgency level',
            ticketBody: 'Please enter the problem you want to solve as comprehensively as possible.',
            ticketNotFinished: 'Please complete the ticket information and try again'
        },
        cancel: 'Cancel',
        submit: 'Submit',
        commitNewTicketSuccess: 'Successfully submitted a new ticket',
        commitNewTicketFailure: 'Error occurred when submitting a new ticket',
        noReply: 'No reply yet',
        noTickets: 'You haven\'t submitted a ticket yet',
        ticketCloseSuccess: 'Ticket closed successfully',
        ticketCloseFailure: 'Ticket closing failed'
    },
    welcome: {
        A: {
            aboutUs: 'About Us',
            pricing: 'Pricing',
            login: 'Login',
            register: 'Register Account',
            welcomeTo: 'Welcome to',
            welcomeToSub: '"Going through the long tunnel at the county border, one arrives at Snow Country. Under the night sky, the earth was a glistening white, and the train stopped in front of the signal station." Here, Yasunari Kawabata opened the prelude to "Snow Country" with extremely concise words.',
            startingUse: 'Start Using',
            whyUs: 'Why Choose Us',
            whyUsSub: '"Going through the long tunnel at the county border, one arrives at Snow Country. Under the night sky, the earth was a glistening white, and the train stopped in front of the signal station." Here, Yasunari Kawabata opened the prelude to "Snow Country" with extremely concise words.',
            browseSafe: 'Browse Safely',
            browseSafeSub: 'The excellent firewall filtering system can effectively defend against phishing and malicious websites.',
            encrypt: 'End-to-End Encryption',
            encryptSub: 'Two-way SSL and end-to-end encryption protect your privacy. Even the server cannot read your information.',
            mgr: 'Efficient Management',
            mgrSub: 'Manage all keys through one user interface. The management functions are complete and rich, and there is no need to worry about subscription leakage.',
            fast: 'Convenient and Fast',
            fastSub: 'Provide complete API documentation for WebApp or to be embedded into third-party software.',
            fastLink: 'Quick Link',
            subscribeUs: 'Subscribe to Us',
            filingsCode: 'Filing Number {code}',
        }
    },
    adminTicket: {
        ticketMgr: 'Ticket Management',

    },
    pagination: {
        perPage10: '10 items of data per page',
        perPage20: '20 items of data per page',
        perPage50: '50 items of data per page',
        perPage100: '100 items of data per page',
    }
}